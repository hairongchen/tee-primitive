syntax = "proto3";
package quoteserver;

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
}

service GetQuote {
    rpc GetQuote (GetQuoteRequest) returns (GetQuoteResponse);
}

message GetQuoteRequest {
   string report_data = 1;
}
/* request example
{
  "metadata": {
    "headers": {
      "te": "trailers",
      "content-type": "application/grpc",
      "user-agent": "tonic/0.9.2"
    }
  },
  "message": {
    "report_data": "MTIzNDU2NzgxMjM0NTY3ODEyMzQ1Njc4MTIzNDU2NzgxMjM0NTY3ODEyMzQ1Njc4"
  },
  "extensions": ""
}
*/

message GetQuoteResponse {
    string quote = 1;
}

/* response example
### success
{
  "metadata": {
    "headers": {
      "content-type": "application/grpc",
      "date": "Wed, 17 May 2023 06:24:41 GMT",
      "grpc-status": "0"
    }
  },
  "message": {
    "quote": "base64 encode quote"
  },
  "extensions": ""
}
### fail
{
  "code": "Internal",
  "message": "TPM be supported!",
  "metadata": {
    "headers": {
      "content-type": "application/grpc",
      "date": "Wed, 17 May 2023 06:23:47 GMT",
      "content-length": "0"
    }
  },
  "source": "None"
}

*/

